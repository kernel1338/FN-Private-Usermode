Fortnite Exploits:

Magic Bullet:

        if (settings::exploits::magicbullet)
        {
            MASK
            magicreset = false;
            auto weapon = read<uintptr_t>(cache::local_pawn + CURRENT_WEAPON);

            write<bool>(weapon + 0xe51, true);  // 0xe51 or 0x3f8  bTraceThroughWorld
            write<int32_t>(weapon + 0xea8, 0);  // TraceThroughPawnsLimit

            write<int32_t>(weapon + 0xeac, 1000);  // TraceThroughBuildingsLimit
            write<int32_t>(weapon + 0xeb0, 1000);  // TraceThroughLandscapeLimit
        }
        else if (!magicreset)
        {
            MASK
            auto weapon = read<uintptr_t>(cache::local_pawn + CURRENT_WEAPON);

            write<bool>(weapon + 0xe51, false); // bTraceThroughWorld
            write<int32_t>(weapon + 0xea8, 0);  // TraceThroughPawnsLimit
            write<int32_t>(weapon + 0xeac, 0);  // TraceThroughBuildingsLimit
            write<int32_t>(weapon + 0xeb0, 0);  // TraceThroughLandscapeLimit
            magicreset = true;

        }

-----------------------------------------------------------------------------------------------------------

Spinbot:

        if (settings::exploits::spinbot)
        {
            MASK
            auto Mesh = read<uint64_t>(cache::local_pawn + MESH);
            static auto Cached = read<Vector3>(Mesh + 0x140);

            if (GetAsyncKeyState(VK_LBUTTON)) {
                write<Vector3>(Mesh + 0x140, Vector3(1, rand() % 361, 1));
            }
            else write<Vector3>(Mesh + 0x140, Cached);
        }

-----------------------------------------------------------------------------------------------------------

CarFly:

        if (settings::exploits::carfly)
        {
            MASK
            uintptr_t CurrentVehicle = read<DWORD_PTR>(cache::local_pawn + 0x2a18); // CurrentVehicle

            if (CurrentVehicle && GetAsyncKeyState(VK_SPACE))
            {
                write<bool>(CurrentVehicle + 0x87a, false); // bUseGravity : 1
            }
            else {
                write<bool>(CurrentVehicle + 0x87a, true); // bUseGravity : 1
            }

        }

-----------------------------------------------------------------------------------------------------------

Fov Changer:

        if (settings::exploits::fovchanger)
        {
            MASK
            fovreset = false;
            write<float>(cache::player_controller + 0x2758, settings::exploits::fovchanger_value); // https://dumpspace.spuckwaffel.com/Games/?hash=6b77eceb&type=classes&idx=AFortPlayerController&member=FOVMinimum
            write<float>(cache::player_controller + 0x275C, settings::exploits::fovchanger_value); // FOVMaximum
        }
        else if (!fovreset)
        {
            MASK
            write<float>(cache::player_controller + 0x2758, settings::exploits::fovchanger_value); // FOVMinimum
            write<float>(cache::player_controller + 0x275C, settings::exploits::fovchanger_value); // FOVMaximum
            fovreset = true;
        }

-----------------------------------------------------------------------------------------------------------

No Reload:

        if (settings::exploits::noreload)
        {
            MASK
            uintptr_t worldsettings = read<uint64_t>(cache::persistent_level + 0x30);
            uintptr_t CurrentWeapon = read<uintptr_t>(cache::local_pawn + 0x338);
            uintptr_t SimcraftsTwoPoint5Hours1 = read<uintptr_t>(cache::current_weapon + 0xA68);
            uintptr_t SimcraftsTwoPoint5Hours2 = read<uintptr_t>(SimcraftsTwoPoint5Hours1 + 0x1678);
            uintptr_t SimcraftsTwoPoint5Hours3 = read<uintptr_t>(SimcraftsTwoPoint5Hours2 + 0x6233);
            uintptr_t SimcraftsTwoPoint5Hours4 = read<uintptr_t>(SimcraftsTwoPoint5Hours3 + 0xc87);
            uintptr_t SimcraftsTwoPoint5Hours5 = read<uintptr_t>(SimcraftsTwoPoint5Hours4 + 0xb39);
            uintptr_t SimcraftsTwoPoint5Hours6 = read<uintptr_t>(SimcraftsTwoPoint5Hours5 + 0x267);
            uintptr_t SimcraftsTwoPoint5Hours7 = read<uintptr_t>(SimcraftsTwoPoint5Hours6 + 0x5cc);
            uintptr_t SimcraftsTwoPoint5Hours8 = read<uintptr_t>(SimcraftsTwoPoint5Hours7 + 0xc82 + 0x8 + 0x18);

            write<char>(SimcraftsTwoPoint5Hours8 + 0x9c8, 0);
            write<float>(SimcraftsTwoPoint5Hours8 + 0x928, 0.01);

            bool cum = read<bool>(CurrentWeapon + 0x329);

            if (cum) {
                write<float>(worldsettings + 0x3C0, 70);
            }
            else {
                write<float>(worldsettings + 0x3C0, 1);
            }
        }
